import java.sql.*; 
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aman Lahariya
 */
public class Search_Mortgage_Entry extends javax.swing.JFrame {

    /**
     * Creates new form Search_Mortgage_Entry
     */
    public Search_Mortgage_Entry() {
        initComponents();
    }
    
    String rno = "";
    void clear()
    {
        int rows = 0;
        DefaultTableModel model_interest=(DefaultTableModel)table_Mortgage.getModel();
        rows = model_interest.getRowCount();
        if(rows > 0)
        {
            for(int i=0; i<rows; i++)
            {
                model_interest.removeRow(0);
            }
        }
        
        txt_Total_amount.setText("                  ---");
        
    }
    void fillCustomer()
    {
        cb_Select.removeAllItems();
        cb_Select.addItem("Select");
        String cname;
        try
            {
                MyFunctions mf = new MyFunctions();
                Connection cn = mf.myConnection();
                Statement stmt = cn.createStatement();
                String query = "Select * from customer order by fname";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next())
                {   
                    cname = rs.getString("fname")+" " + rs.getString("lname");
                    cb_Select.addItem(cname);
                }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e);
            }
    }
    
    void fillJewellery()
    {
        cb_Select.removeAllItems();
        cb_Select.addItem("Select");
        String jname;
        try
            {
                MyFunctions mf = new MyFunctions();
                Connection cn = mf.myConnection();
                Statement stmt = cn.createStatement();
                String query = "Select * from jewellery_type order by name";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next())
                {   
                    jname = rs.getString("name");
                    cb_Select.addItem(jname);
                }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e);
            }
    }
    
    void fillOrnament()
    {
        cb_Select.removeAllItems();
        cb_Select.addItem("Select");
        String oname;
        try
            {
                MyFunctions mf = new MyFunctions();
                Connection cn = mf.myConnection();
                Statement stmt = cn.createStatement();
                String query = "Select * from ornament_type order by name";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next())
                {   
                    oname = rs.getString("name");
                    cb_Select.addItem(oname);
                }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jPanel_SearchBy = new javax.swing.JPanel();
        rd_All = new javax.swing.JRadioButton();
        rb_Jewellery = new javax.swing.JRadioButton();
        rb_Ornament = new javax.swing.JRadioButton();
        rb_Date = new javax.swing.JRadioButton();
        chk_Customer_Name = new javax.swing.JCheckBox();
        chk_Receipt_No = new javax.swing.JCheckBox();
        rb_Status = new javax.swing.JRadioButton();
        jPanel_Total = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_Total_amount = new javax.swing.JTextField();
        jPanel_DateRange = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        lbl_Select = new javax.swing.JLabel();
        cb_Select = new javax.swing.JComboBox();
        bt_Search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_Mortgage = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search Mortgage Entry");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 22)); // NOI18N
        jLabel3.setText("Search Mortgage Entry");

        jPanel_SearchBy.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Record by :"));

        buttonGroup1.add(rd_All);
        rd_All.setText("View All");
        rd_All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd_AllActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_Jewellery);
        rb_Jewellery.setText("Jewellery Type");
        rb_Jewellery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_JewelleryActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_Ornament);
        rb_Ornament.setText("Ornament Type");
        rb_Ornament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_OrnamentActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_Date);
        rb_Date.setText("Date");
        rb_Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_DateActionPerformed(evt);
            }
        });

        chk_Customer_Name.setText("Customer Name");
        chk_Customer_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_Customer_NameActionPerformed(evt);
            }
        });

        chk_Receipt_No.setText("Receipt No");
        chk_Receipt_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_Receipt_NoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_Status);
        rb_Status.setText("Status");
        rb_Status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_StatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_SearchByLayout = new javax.swing.GroupLayout(jPanel_SearchBy);
        jPanel_SearchBy.setLayout(jPanel_SearchByLayout);
        jPanel_SearchByLayout.setHorizontalGroup(
            jPanel_SearchByLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SearchByLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rb_Date)
                .addGap(18, 18, 18)
                .addComponent(chk_Receipt_No)
                .addGap(18, 18, 18)
                .addComponent(chk_Customer_Name)
                .addGap(10, 10, 10)
                .addComponent(rb_Status)
                .addGap(18, 18, 18)
                .addComponent(rb_Jewellery)
                .addGap(18, 18, 18)
                .addComponent(rb_Ornament)
                .addGap(18, 18, 18)
                .addComponent(rd_All, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_SearchByLayout.setVerticalGroup(
            jPanel_SearchByLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SearchByLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_SearchByLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rd_All)
                    .addComponent(rb_Jewellery)
                    .addComponent(rb_Ornament)
                    .addComponent(rb_Date)
                    .addComponent(chk_Customer_Name)
                    .addComponent(chk_Receipt_No)
                    .addComponent(rb_Status))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel_Total.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Amount (INR)");

        txt_Total_amount.setBackground(new java.awt.Color(204, 204, 255));
        txt_Total_amount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Total_amount.setText("                    ---");
        txt_Total_amount.setEnabled(false);

        javax.swing.GroupLayout jPanel_TotalLayout = new javax.swing.GroupLayout(jPanel_Total);
        jPanel_Total.setLayout(jPanel_TotalLayout);
        jPanel_TotalLayout.setHorizontalGroup(
            jPanel_TotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TotalLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel_TotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Total_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TotalLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(39, 39, 39)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel_TotalLayout.setVerticalGroup(
            jPanel_TotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TotalLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_Total_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel_DateRange.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Date Range"));
        jPanel_DateRange.setEnabled(false);

        jLabel2.setText("From:");

        jLabel7.setText("To:");

        javax.swing.GroupLayout jPanel_DateRangeLayout = new javax.swing.GroupLayout(jPanel_DateRange);
        jPanel_DateRange.setLayout(jPanel_DateRangeLayout);
        jPanel_DateRangeLayout.setHorizontalGroup(
            jPanel_DateRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DateRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel_DateRangeLayout.setVerticalGroup(
            jPanel_DateRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DateRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_DateRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_Select.setText("Select Customer Name:");

        cb_Select.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cb_Select.setEnabled(false);
        cb_Select.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cb_SelectMouseClicked(evt);
            }
        });

        bt_Search.setText("Search");
        bt_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SearchActionPerformed(evt);
            }
        });

        table_Mortgage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Receipt No", "Date", "Customer Name", "Jewellery Type", "Ornament Type", "Weight (gm)", "Purity (%)", "Amount Given", "Interest Rate", "Other Info", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_Mortgage);
        if (table_Mortgage.getColumnModel().getColumnCount() > 0) {
            table_Mortgage.getColumnModel().getColumn(0).setPreferredWidth(65);
            table_Mortgage.getColumnModel().getColumn(0).setMaxWidth(65);
            table_Mortgage.getColumnModel().getColumn(2).setPreferredWidth(120);
            table_Mortgage.getColumnModel().getColumn(5).setPreferredWidth(70);
            table_Mortgage.getColumnModel().getColumn(5).setMaxWidth(70);
            table_Mortgage.getColumnModel().getColumn(6).setPreferredWidth(60);
            table_Mortgage.getColumnModel().getColumn(6).setMaxWidth(60);
            table_Mortgage.getColumnModel().getColumn(7).setPreferredWidth(80);
            table_Mortgage.getColumnModel().getColumn(7).setMaxWidth(80);
            table_Mortgage.getColumnModel().getColumn(8).setPreferredWidth(80);
            table_Mortgage.getColumnModel().getColumn(8).setMaxWidth(80);
            table_Mortgage.getColumnModel().getColumn(9).setPreferredWidth(140);
        }

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(341, 341, 341))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel_SearchBy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel_DateRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(lbl_Select, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(cb_Select, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel_SearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jPanel_Total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel_DateRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Select)
                            .addComponent(cb_Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt_Search))
                        .addGap(31, 31, 31)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rd_AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd_AllActionPerformed
        // TODO add your handling code here:
        clear();
        jPanel_DateRange.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
        cb_Select.enable(false);
        cb_Select.setSelectedIndex(0);
        chk_Receipt_No.setSelected(false);
        chk_Customer_Name.setSelected(false);
        bt_Search.doClick();
    }//GEN-LAST:event_rd_AllActionPerformed

    private void rb_DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_DateActionPerformed
        // TODO add your handling code here:
        jPanel_DateRange.setEnabled(true);
        jDateChooser1.setEnabled(true);
        jDateChooser2.setEnabled(true);
        cb_Select.enable(false);
        cb_Select.setSelectedIndex(0);
        chk_Receipt_No.setSelected(false);
        chk_Customer_Name.setSelected(false);
        clear();
    }//GEN-LAST:event_rb_DateActionPerformed

    private void cb_SelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb_SelectMouseClicked
        // TODO add your handling code here:
        clear();
        // Clearing table content
        /*DefaultTableModel model=(DefaultTableModel)table_Mortgage.getModel();
        int rows=model.getRowCount();
        if(rows > 0)
        {
            for(int i=0; i<rows; i++)
            {
                model.removeRow(0);
            }
        }*/
    }//GEN-LAST:event_cb_SelectMouseClicked

    private void bt_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SearchActionPerformed
        // TODO add your handling code here:
        try
        {
            clear();
            String query =null;
            MyFunctions mf = new MyFunctions();
            Connection cn = mf.myConnection();
            Statement stmt1 = cn.createStatement();
            DefaultTableModel model_debit = (DefaultTableModel) table_Mortgage.getModel();

            if(rb_Date.isSelected())
            {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");

                Date start = jDateChooser1.getDate();
                Date end = jDateChooser2.getDate();

                String sd = sdf.format(jDateChooser1.getDate());
                String ed = sdf.format(jDateChooser2.getDate());

                int ans = start.compareTo(end);
                if(ans > 0)
                {
                    JOptionPane.showMessageDialog(this,"Starting date must be less than end date!\nPlease enter correct date range!");

                }
                else
                {
                    query = "Select * from mortgage_entry where entry_date between '"+ sd +"' and '"+ ed +"' ";
                }
            }
            
            else if(chk_Receipt_No.isSelected())
            {
                    query = "Select * from mortgage_entry where rno = '"+rno+"'order by entry_date";
            }
            
            else if(chk_Customer_Name.isSelected())
            {
                String name = cb_Select.getSelectedItem().toString();
                int cid = mf.retreive_cid(name);
                query = "Select * from mortgage_entry where cid = '"+ cid +"'";
            }
            
            else if(chk_Receipt_No.isSelected() && chk_Customer_Name.isSelected())
            {
                String name = cb_Select.getSelectedItem().toString();
                int cid = mf.retreive_cid(name);
                query = "Select * from mortgage_entry where cid = '"+ cid +"' AND rno = '"+rno+"'";
            }
            
            else if(rb_Jewellery.isSelected())
            {
                String jname = cb_Select.getSelectedItem().toString();
                query = "Select * from mortgage_entry where jewellery_type = '"+jname+"'order by entry_date";
            }
            
            else if(rb_Ornament.isSelected())
            {
                String oname = cb_Select.getSelectedItem().toString();
                query = "Select * from mortgage_entry where ornament_type = '"+oname+"'order by entry_date";
            }
            
            else if(rb_Status.isSelected())
            {
                String status = cb_Select.getSelectedItem().toString();
                query = "Select * from mortgage_entry where status = '"+status+"'order by entry_date";
            }
            
            else                                                                //FOR VIEW ALL
            {
                query = "Select * from mortgage_entry order by entry_date";
            }

            if(query!=null)
            {
                ResultSet rs1 = stmt1.executeQuery(query);
                boolean noRecord = true;
                while(rs1.next())
                {
                    noRecord = false;
                    String rno = rs1.getString("rno");
                    Date me_date = rs1.getDate("entry_date");
                    String jewellery = rs1.getString("jewellery_type");
                    String ornament = rs1.getString("ornament_type");
                    float weight = rs1.getFloat("weight");
                    float purity = rs1.getFloat("purity");
                    String info = rs1.getString("other_info");
                    int amount = rs1.getInt("amt_given");
                    float interest_rate = rs1.getFloat("interest_rate");
                    String status = rs1.getString("status");
                    
                    //RETREIVING CUSTOMER NAME
                    Statement stmt3 = cn.createStatement();
                    String query3 = "Select fullname from customer where cid = "+rs1.getString("cid")+"";
                    ResultSet rs3 = stmt3.executeQuery(query3);
                    rs3.next();
                    String name = rs3.getString("fullname");

                    model_debit.addRow(new Object[]{rno,me_date,name,jewellery,ornament,weight,purity,amount,interest_rate,info,status});
                }
                if(noRecord)
                {
                    JOptionPane.showMessageDialog(this,"No Record found !");
                }
                else
                {
                    //CALCULATION OF TOTAL
                    long tamt = 0; long amt;
                    long tinterest = 0; long interest;
                    for (int rows = 0; rows < table_Mortgage.getModel().getRowCount(); rows++)
                    {
                        amt = new Long( table_Mortgage.getModel().getValueAt(rows,7).toString());
                        tamt = tamt + amt;
                    }
                    txt_Total_amount.setText(String.valueOf(tamt));
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e);
        }
    }//GEN-LAST:event_bt_SearchActionPerformed

    private void chk_Customer_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_Customer_NameActionPerformed
        // TODO add your handling code here:
        clear();
        cb_Select.enable(true);
        jPanel_DateRange.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
        cb_Select.setSelectedIndex(0);
        lbl_Select.setText("Select Customer Name:");
        fillCustomer();
    }//GEN-LAST:event_chk_Customer_NameActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Date date = new Date();
        jDateChooser1.setDate(date);
        jDateChooser2.setDate(date);
        jDateChooser1.setMaxSelectableDate(date);
        jDateChooser2.setMaxSelectableDate(date);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void chk_Receipt_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_Receipt_NoActionPerformed
        // TODO add your handling code here:
        if(chk_Receipt_No.isSelected())
        rno = JOptionPane.showInputDialog("Enter Receipt No:");
    }//GEN-LAST:event_chk_Receipt_NoActionPerformed

    private void rb_JewelleryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_JewelleryActionPerformed
        // TODO add your handling code here:
        clear();
        cb_Select.enable(true);
        jPanel_DateRange.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
        cb_Select.setSelectedIndex(0);
        lbl_Select.setText("Select Jewellery Type:");
        chk_Receipt_No.setSelected(false);
        chk_Customer_Name.setSelected(false);
        fillJewellery();
    }//GEN-LAST:event_rb_JewelleryActionPerformed

    private void rb_OrnamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_OrnamentActionPerformed
        // TODO add your handling code here:
        clear();
        cb_Select.enable(true);
        jPanel_DateRange.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
        cb_Select.setSelectedIndex(0);
        lbl_Select.setText("Select Ornament Type:");
        chk_Receipt_No.setSelected(false);
        chk_Customer_Name.setSelected(false);
        fillOrnament();
    }//GEN-LAST:event_rb_OrnamentActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void rb_StatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_StatusActionPerformed
        // TODO add your handling code here:
        clear();
        cb_Select.enable(true);
        jPanel_DateRange.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
        cb_Select.setSelectedIndex(0);
        lbl_Select.setText("Select Status:");
        chk_Receipt_No.setSelected(false);
        chk_Customer_Name.setSelected(false);
        cb_Select.removeAllItems();
        cb_Select.addItem("Select");
        cb_Select.addItem("Returned");
        cb_Select.addItem("Yet to Return");
    }//GEN-LAST:event_rb_StatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search_Mortgage_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search_Mortgage_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search_Mortgage_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search_Mortgage_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search_Mortgage_Entry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Search;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cb_Select;
    private javax.swing.JCheckBox chk_Customer_Name;
    private javax.swing.JCheckBox chk_Receipt_No;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel_DateRange;
    private javax.swing.JPanel jPanel_SearchBy;
    private javax.swing.JPanel jPanel_Total;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_Select;
    private javax.swing.JRadioButton rb_Date;
    private javax.swing.JRadioButton rb_Jewellery;
    private javax.swing.JRadioButton rb_Ornament;
    private javax.swing.JRadioButton rb_Status;
    private javax.swing.JRadioButton rd_All;
    private javax.swing.JTable table_Mortgage;
    private javax.swing.JTextField txt_Total_amount;
    // End of variables declaration//GEN-END:variables
}
